#!/bin/bash

#call build_ecr AWS_ACCOUNT ECR_REGION TAG
#e.g. build_ecr 00000 ap-southeast-2 $BUILD_NUMBER

if [ "$#" -ne 3 ]; then
  echo "Need 3 arguments: account region tag (usually tag = build_number)"
  exit 1
fi

set -e

export REPO_NAME=base2-fast-elk
export ECR_REGION=$2
export REGISTRY_ID=$1
export TAG=$3
export DOCKER_DIR=fast-elk-docker
export START_DIR=$PWD
export ECR="${REGISTRY_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com"

env

echo "login to ecr"
eval `aws ecr get-login --region ${ECR_REGION}`

#echo "describe repos"
#aws --region ${ECR_REGION} ecr describe-repositories

PROPERTIES_FILE=$WORKSPACE/build.properties
echo "build.tag=$TAG" >> $PROPERTIES_FILE
echo "build.date=`date +%Y%m%d_%H%M`" >> $PROPERTIES_FILE

function build_it() {
  export SERVICE=${1}
  cp $PROPERTIES_FILE $DOCKER_DIR/$SERVICE

  echo "build $SERVICE"
  cd $START_DIR/$DOCKER_DIR/$SERVICE

  docker build -t $REPO_NAME/$SERVICE:$TAG .

  echo "tag images"
  docker tag -f $REPO_NAME/$SERVICE:$TAG $ECR/$REPO_NAME/$SERVICE:$TAG
  docker tag -f $REPO_NAME/$SERVICE:$TAG $ECR/$REPO_NAME/$SERVICE:latest

  echo "create repo"
  aws --region ${ECR_REGION} ecr create-repository --repository-name $REPO_NAME/$SERVICE || echo "repo exists already"

  echo "push images"
  docker push $ECR/$REPO_NAME/$SERVICE:$TAG
  docker push $ECR/$REPO_NAME/$SERVICE:latest

  echo "list remote"
  aws --region ${ECR_REGION} ecr list-images --repository-name "$REPO_NAME/$SERVICE"

  echo "rmi image"
  docker rmi $REPO_NAME/$SERVICE:$TAG
  docker rmi $ECR/$REPO_NAME/$SERVICE:$TAG
  docker rmi $ECR/$REPO_NAME/$SERVICE:latest
  
  cd $START_DIR
}

build_it elasticsearch
build_it logstash
build_it nginx
build_it kibana

docker images
